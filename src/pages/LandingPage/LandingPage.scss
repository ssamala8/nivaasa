@use '../../styles/variables' as var;
@use '../../styles/mixins' as mix;

// --- Global Homepage Styles ---
.homepage-content {
  width: 100%;

  section {
    padding: 5rem 2rem;
    border-bottom: 1px solid;
    .layout.light & { border-color: var.$light-border; }
    .layout.dark & { border-color: var.$dark-border; }
    &:last-child { border-bottom: none; }
  }

  .section-headline {
    font-size: 2.5rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 1.5rem;
    @include mix.fade-in-up(0.6s, 0.1s);
  }

  .section-subheadline {
    font-size: 1.1rem;
    color: inherit;
    opacity: 0.8;
    text-align: center;
    max-width: 700px;
    margin: 0 auto 3rem auto;
    line-height: 1.7;
    @include mix.fade-in-up(0.6s, 0.2s);
  }
}

// --- Reusable Button Styles (Defined here for homepage context) ---
// Note: Consider moving these to a global button file if used more widely
.btn {
  // Styles already defined in components/Button/Button.scss
  // We can add specific homepage button overrides here if needed
}


// --- 1. Hero Section ---
.hero-section {
  min-height: 70vh;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  // Maybe add a subtle background pattern or image if desired
}

// ... (Rest of LandingPage.scss remains the same, using the new .btn styles automatically) ...

// --- 3. Features Section ---
.features-section {
  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem; // Increased gap
    margin-top: 3rem;
  }
}

// --- 4. How It Works Section ---
.how-it-works-section {
  .layout.light & { background-color: rgba(var.$light-card-bg, 0.5); } // Subtle background tint
  .layout.dark & { background-color: rgba(var.$dark-card-bg, 0.3); }

  .steps-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
  }

  .step-card {
    text-align: center;
    padding: 2rem;
    @include mix.fade-in-up(0.5s); // Add animation to steps
    // Stagger animation
    &:nth-child(1) { animation-delay: 0.2s; }
    &:nth-child(2) { animation-delay: 0.3s; }
    &:nth-child(3) { animation-delay: 0.4s; }

    .step-number {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background-color: var.$primary-color;
      color: #fff;
      font-size: 1.5rem;
      font-weight: 700;
      @include mix.flex-center;
      margin: 0 auto 1.5rem auto;
      box-shadow: 0 5px 15px rgba(var.$primary-color, 0.4);
    }

    h3 { font-size: 1.5rem; margin-bottom: 0.75rem; }
    p { opacity: 0.8; }
  }
}

// --- 5. Pricing Section ---
.pricing-section {
  .pricing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    align-items: stretch;
  }
}

// --- 6. Final CTA Section ---
.cta-section {
  text-align: center;
  .layout.light & { background-color: var.$light-card-bg; } // Use card bg
  .layout.dark & { background-color: var.$dark-card-bg; }

  h2 { font-size: 2.5rem; font-weight: 700; }
  p { font-size: 1.1rem; opacity: 0.8; margin: 1rem auto 2.5rem auto; max-width: 600px; }
}